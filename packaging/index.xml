<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Packaging on Hermit Docs</title><link>https://cashapp.github.io/hermit/packaging/</link><description>Recent content in Packaging on Hermit Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://cashapp.github.io/hermit/packaging/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorial</title><link>https://cashapp.github.io/hermit/packaging/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cashapp.github.io/hermit/packaging/tutorial/</guid><description>For this tutorial we're going to package up jq, a supremely useful tool for filtering and transforming JSON.
Writing package manifests for Hermit should be fairly familiar to anyone who has had experience with package managers like Homebrew, though it should be significantly more straightforward assuming the package provides cross-platform binaries for download.
This tutorial covers a fairly simple package definition, but more complex examples exist such as graalvm. Please refer to the hermit-packages repository for many more examples.</description></item><item><title>Reference</title><link>https://cashapp.github.io/hermit/packaging/reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cashapp.github.io/hermit/packaging/reference/</guid><description>Update Policy Hermit syncs manifest sources every 24 hours from HEAD. Because any changes are then immediately reflected in active environments, care must be taken to maintain backwards compatibility.
In particular this means:
Never delete or rename versions. Take care when updating environment variables. And in general think carefully about what impact your change will have if it is applied to an active environment.
Manifests Hermit manifests (package definitions) are HCL configuration files defining where to download packages from and how to install them.</description></item><item><title>Private Packages</title><link>https://cashapp.github.io/hermit/packaging/private/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cashapp.github.io/hermit/packaging/private/</guid><description>Custom Hermit Hermit has a configurable command-line entry point which can be useful if you need to use a custom HTTP client in order to access your private packages or manifest sources. See the hermit main package for an example of how this is used.
This can be used to specify a custom set of sources, and other configuration, for your org.
Private Channel If you ship your own version of Hermit you must choose a unique channel name (typically your oganisation's name), eg.</description></item></channel></rss>